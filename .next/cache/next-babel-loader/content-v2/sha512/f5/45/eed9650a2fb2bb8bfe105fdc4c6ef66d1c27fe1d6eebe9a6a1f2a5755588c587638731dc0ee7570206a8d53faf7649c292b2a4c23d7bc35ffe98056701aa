{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ChrisLifts\\\\source\\\\repos\\\\imfeelingbullish-next\\\\components\\\\coinGecko\\\\MarketTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from '@chakra-ui/react';\nimport { useMemo } from 'react';\n\nvar MarketTable = function MarketTable(_ref) {\n  _s();\n\n  var marketData = _ref.marketData;\n  var columns = useMemo(function () {\n    return [{\n      Header: 'Name',\n      accessor: 'user'\n    }, {\n      Header: 'Price',\n      accessor: 'time'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'balance'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'country'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'action'\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    variant: \"simple\",\n    children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n      children: \"Imperial to metric conversion factors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Thead, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        position: \"sticky\",\n        top: 0,\n        zIndex: 9,\n        bg: \"white\",\n        shadow: \"0 1px 0 rgba(0,0,0,0.1)\",\n        children: columns.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(Th, {\n            maxW: \"20%\",\n            textAlign: \"center\",\n            py: 2,\n            px: 0,\n            children: headerGroup.Header\n          }, headerGroup.Header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tbody, {\n      children: [/*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: \"inches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          children: \"millimetres (mm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          isNumeric: true,\n          children: \"25.4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: \"feet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          children: \"centimetres (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          isNumeric: true,\n          children: \"30.48\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: \"yards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          children: \"metres (m)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Td, {\n          isNumeric: true,\n          children: \"0.91444\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tfoot, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"To convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"into\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Th, {\n          isNumeric: true,\n          children: \"multiply by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MarketTable, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = MarketTable;\nexport default MarketTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketTable\");","map":{"version":3,"sources":["C:/Users/ChrisLifts/source/repos/imfeelingbullish-next/components/coinGecko/MarketTable.tsx"],"names":["Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","useMemo","MarketTable","marketData","columns","Header","accessor","map","headerGroup"],"mappings":"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","sourcesContent":["import { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from '@chakra-ui/react';\r\nimport { useMemo } from 'react';\r\nimport { ICGCoin } from '../../api/coinGecko';\r\n\r\ninterface IProps {\r\n  marketData: ICGCoin[];\r\n}\r\n\r\nconst MarketTable: React.FC<IProps> = ({ marketData }) => {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'user',\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'time',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'balance',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'country',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'action',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Table variant=\"simple\">\r\n      <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n      <Thead>\r\n        <Tr position=\"sticky\" top={0} zIndex={9} bg=\"white\" shadow=\"0 1px 0 rgba(0,0,0,0.1)\">\r\n          {columns.map((headerGroup) => (\r\n            <Th key={headerGroup.Header} maxW=\"20%\" textAlign=\"center\" py={2} px={0}>\r\n              {headerGroup.Header}\r\n            </Th>\r\n          ))}\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        <Tr>\r\n          <Td>inches</Td>\r\n          <Td>millimetres (mm)</Td>\r\n          <Td isNumeric>25.4</Td>\r\n        </Tr>\r\n        <Tr>\r\n          <Td>feet</Td>\r\n          <Td>centimetres (cm)</Td>\r\n          <Td isNumeric>30.48</Td>\r\n        </Tr>\r\n        <Tr>\r\n          <Td>yards</Td>\r\n          <Td>metres (m)</Td>\r\n          <Td isNumeric>0.91444</Td>\r\n        </Tr>\r\n      </Tbody>\r\n      <Tfoot>\r\n        <Tr>\r\n          <Th>To convert</Th>\r\n          <Th>into</Th>\r\n          <Th isNumeric>multiply by</Th>\r\n        </Tr>\r\n      </Tfoot>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default MarketTable;\r\n"]},"metadata":{},"sourceType":"module"}