{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ChrisLifts\\\\source\\\\repos\\\\imfeelingbullish-next\\\\pages\\\\index.tsx\";\nimport { Spinner } from '@chakra-ui/react';\nimport { useAxios } from '../hooks/useAxios';\nimport { GetAllCoinsUrl } from '../api/coinGecko';\nimport React, { useEffect, useState } from 'react';\nimport MarketTable from '../components/coinGecko/MarketTable';\nconst MARKET_CAP_RANK_MIN = 50;\nconst MARKET_CAP_RANK_MAX = 300;\nconst MARKET_CAP_MIN = 5000000;\nconst MARKET_CAP_MAX = 100000000;\nexport const Index = () => {\n  const {\n    data,\n    loading\n  } = useAxios(GetAllCoinsUrl());\n  const {\n    0: marketData,\n    1: setMarketData\n  } = useState([]);\n  useEffect(() => {\n    if (data) {\n      const filteredData = data.filter(x => x.market_cap_rank < MARKET_CAP_RANK_MAX && x.market_cap_rank >= MARKET_CAP_RANK_MIN && x.market_cap > MARKET_CAP_MIN && x.market_cap < MARKET_CAP_MAX);\n      setMarketData(filteredData.map(x => ({\n        name: x.name,\n        price: `$${x.current_price}`,\n        marketCapRank: x.market_cap_rank,\n        marketCap: `$${x.market_cap}`\n      })));\n    }\n  }, [data]);\n\n  if (marketData.length <= 0 || marketData.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"green.500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MarketTable, {\n    marketData: marketData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\nexport default Index;","map":{"version":3,"sources":["C:/Users/ChrisLifts/source/repos/imfeelingbullish-next/pages/index.tsx"],"names":["Spinner","useAxios","GetAllCoinsUrl","React","useEffect","useState","MarketTable","MARKET_CAP_RANK_MIN","MARKET_CAP_RANK_MAX","MARKET_CAP_MIN","MARKET_CAP_MAX","Index","data","loading","marketData","setMarketData","filteredData","filter","x","market_cap_rank","market_cap","map","name","price","current_price","marketCapRank","marketCap","length"],"mappings":";;AAAA,SAAcA,OAAd,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAAwC,kBAAxC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAA6C,qCAA7C;AAEA,MAAMC,mBAAmB,GAAG,EAA5B;AACA,MAAMC,mBAAmB,GAAG,GAA5B;AACA,MAAMC,cAAc,GAAG,OAAvB;AACA,MAAMC,cAAc,GAAG,SAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBZ,QAAQ,CAAYC,cAAc,EAA1B,CAAlC;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAoB,EAApB,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACR,YAAMI,YAAY,GAAGJ,IAAI,CAACK,MAAL,CAClBC,CAAD,IACEA,CAAC,CAACC,eAAF,GAAoBX,mBAApB,IACAU,CAAC,CAACC,eAAF,IAAqBZ,mBADrB,IAEAW,CAAC,CAACE,UAAF,GAAeX,cAFf,IAGAS,CAAC,CAACE,UAAF,GAAeV,cALE,CAArB;AAOAK,MAAAA,aAAa,CACXC,YAAY,CAACK,GAAb,CAAkBH,CAAD,KAAQ;AAAEI,QAAAA,IAAI,EAAEJ,CAAC,CAACI,IAAV;AAAgBC,QAAAA,KAAK,EAAG,IAAGL,CAAC,CAACM,aAAc,EAA3C;AAA8CC,QAAAA,aAAa,EAAEP,CAAC,CAACC,eAA/D;AAAgFO,QAAAA,SAAS,EAAG,IAAGR,CAAC,CAACE,UAAW;AAA5G,OAAR,CAAjB,CADW,CAAb;AAGD;AACF,GAbQ,EAaN,CAACR,IAAD,CAbM,CAAT;;AAeA,MAAIE,UAAU,CAACa,MAAX,IAAqB,CAArB,IAA0Bb,UAAU,CAACa,MAAX,IAAqB,CAAnD,EAAsD;AACpD,wBAAO,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,WAAD;AAAa,IAAA,UAAU,EAAEb;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBM;AA0BP,eAAeH,KAAf","sourcesContent":["import { Box, Spinner } from '@chakra-ui/react';\r\nimport { useAxios } from '../hooks/useAxios';\r\nimport { GetAllCoinsUrl, ICGCoin } from '../api/coinGecko';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MarketTable, { IMarketTableRow } from '../components/coinGecko/MarketTable';\r\n\r\nconst MARKET_CAP_RANK_MIN = 50;\r\nconst MARKET_CAP_RANK_MAX = 300;\r\nconst MARKET_CAP_MIN = 5000000;\r\nconst MARKET_CAP_MAX = 100000000;\r\n\r\nexport const Index = () => {\r\n  const { data, loading } = useAxios<ICGCoin[]>(GetAllCoinsUrl());\r\n  const [marketData, setMarketData] = useState<IMarketTableRow[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const filteredData = data.filter(\r\n        (x) =>\r\n          x.market_cap_rank < MARKET_CAP_RANK_MAX &&\r\n          x.market_cap_rank >= MARKET_CAP_RANK_MIN &&\r\n          x.market_cap > MARKET_CAP_MIN &&\r\n          x.market_cap < MARKET_CAP_MAX\r\n      );\r\n      setMarketData(\r\n        filteredData.map((x) => ({ name: x.name, price: `$${x.current_price}`, marketCapRank: x.market_cap_rank, marketCap: `$${x.market_cap}` }))\r\n      );\r\n    }\r\n  }, [data]);\r\n\r\n  if (marketData.length <= 0 || marketData.length <= 0) {\r\n    return <Spinner color=\"green.500\" />;\r\n  }\r\n\r\n  return <MarketTable marketData={marketData} />;\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}