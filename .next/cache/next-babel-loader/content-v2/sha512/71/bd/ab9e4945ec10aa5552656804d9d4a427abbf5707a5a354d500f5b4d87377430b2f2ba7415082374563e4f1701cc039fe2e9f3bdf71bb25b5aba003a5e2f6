{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ChrisLifts\\\\source\\\\repos\\\\imfeelingbullish-next\\\\components\\\\coinGecko\\\\MarketTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Table, Thead, Tfoot, Tr, Th, TableCaption } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MarketTableRows from './MarketTableRows';\n\nvar MarketTable = function MarketTable(_ref) {\n  _s();\n\n  var marketData = _ref.marketData;\n  var columns = useMemo(function () {\n    return [{\n      Header: 'Name',\n      accessor: 'name'\n    }, {\n      Header: 'Price',\n      accessor: 'current_price'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'market_cap_rank'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'country'\n    }, {\n      Header: 'Market Cap Rank',\n      accessor: 'action'\n    }];\n  }, []); // Use the state and functions returned from useTable to build your UI\n\n  var _useTable = useTable({\n    columns: columns,\n    data: marketData\n  }),\n      getTableProps = _useTable.getTableProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow,\n      getTableBodyProps = _useTable.getTableBodyProps;\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    variant: \"simple\",\n    children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n      children: \"Imperial to metric conversion factors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Thead, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        position: \"sticky\",\n        top: 0,\n        zIndex: 9,\n        bg: \"white\",\n        shadow: \"0 1px 0 rgba(0,0,0,0.1)\",\n        children: columns.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(Th, {\n            maxW: \"20%\",\n            textAlign: \"center\",\n            py: 2,\n            px: 0,\n            children: headerGroup.Header\n          }, headerGroup.Header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MarketTableRows, {\n      data: marketData,\n      rows: rows,\n      prepareRow: prepareRow,\n      getTableBodyProps: getTableBodyProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tfoot, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"To convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"into\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Th, {\n          isNumeric: true,\n          children: \"multiply by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MarketTable, \"Yy4SK65hDt+EiFH9hZm13csN5SA=\", false, function () {\n  return [useTable];\n});\n\n_c = MarketTable;\nexport default MarketTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketTable\");","map":{"version":3,"sources":["C:/Users/ChrisLifts/source/repos/imfeelingbullish-next/components/coinGecko/MarketTable.tsx"],"names":["Table","Thead","Tfoot","Tr","Th","TableCaption","useMemo","useTable","MarketTableRows","MarketTable","marketData","columns","Header","accessor","data","getTableProps","headerGroups","rows","prepareRow","getTableBodyProps","map","headerGroup"],"mappings":"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","sourcesContent":["import { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from '@chakra-ui/react';\r\nimport { useMemo } from 'react';\r\nimport { ICGCoin } from '../../api/coinGecko';\r\nimport { useTable } from 'react-table';\r\nimport MarketTableRows from './MarketTableRows';\r\n\r\nexport interface IMarketTableRow {\r\n  name: string;\r\n  price: number;\r\n  marketCapRank: number;\r\n}\r\n\r\ninterface IProps {\r\n  marketData: ICGCoin[];\r\n}\r\n\r\nconst MarketTable: React.FC<IProps> = ({ marketData }) => {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'current_price',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'market_cap_rank',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'country',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'action',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, headerGroups, rows, prepareRow, getTableBodyProps } = useTable({\r\n    columns,\r\n    data: marketData,\r\n  });\r\n\r\n  return (\r\n    <Table variant=\"simple\">\r\n      <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n      <Thead>\r\n        <Tr position=\"sticky\" top={0} zIndex={9} bg=\"white\" shadow=\"0 1px 0 rgba(0,0,0,0.1)\">\r\n          {columns.map((headerGroup) => (\r\n            <Th key={headerGroup.Header} maxW=\"20%\" textAlign=\"center\" py={2} px={0}>\r\n              {headerGroup.Header}\r\n            </Th>\r\n          ))}\r\n        </Tr>\r\n      </Thead>\r\n      <MarketTableRows data={marketData} rows={rows} prepareRow={prepareRow} getTableBodyProps={getTableBodyProps} />\r\n      <Tfoot>\r\n        <Tr>\r\n          <Th>To convert</Th>\r\n          <Th>into</Th>\r\n          <Th isNumeric>multiply by</Th>\r\n        </Tr>\r\n      </Tfoot>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default MarketTable;\r\n"]},"metadata":{},"sourceType":"module"}