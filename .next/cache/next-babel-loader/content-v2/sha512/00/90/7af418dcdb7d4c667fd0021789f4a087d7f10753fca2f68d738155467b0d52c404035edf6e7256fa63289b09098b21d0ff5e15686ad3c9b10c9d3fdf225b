{"ast":null,"code":"import axios from 'axios';\nimport { useState, useEffect } from \"react\";\nexport function useAxios(uri) {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: statusCode,\n    1: setStatusCode\n  } = useState(0);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (!uri) return;\n    setLoading(true);\n    axios.get(uri).then(response => setData(response.data)).catch(function (error) {\n      if (error.response) setStatusCode(error.response.status);\n      setError(error);\n    }).then(() => setLoading(false));\n  }, [uri]);\n  return {\n    loading,\n    data,\n    error,\n    statusCode\n  };\n}","map":{"version":3,"sources":["C:/Users/ChrisLifts/source/repos/imfeelingbullish-next/hooks/useAxios.ts"],"names":["axios","useState","useEffect","useAxios","uri","data","setData","error","setError","statusCode","setStatusCode","loading","setLoading","get","then","response","catch","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;AAEA,OAAO,SAASC,QAAT,CAAqBC,GAArB,EAAkC;AACvC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,GAAL,EAAU;AACVQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAUT,GAAV,EACGU,IADH,CACSC,QAAD,IAAcT,OAAO,CAACS,QAAQ,CAACV,IAAV,CAD7B,EAEGW,KAFH,CAES,UAAUT,KAAV,EAAiB;AAAE,UAAGA,KAAK,CAACQ,QAAT,EAAmBL,aAAa,CAACH,KAAK,CAACQ,QAAN,CAAeE,MAAhB,CAAb;AAAsCT,MAAAA,QAAQ,CAACD,KAAD,CAAR;AAAkB,KAFvG,EAGGO,IAHH,CAGQ,MAAMF,UAAU,CAAC,KAAD,CAHxB;AAID,GAPQ,EAON,CAACR,GAAD,CAPM,CAAT;AASA,SAAO;AACLO,IAAAA,OADK;AAELN,IAAAA,IAFK;AAGLE,IAAAA,KAHK;AAILE,IAAAA;AAJK,GAAP;AAMD","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect, } from \"react\";\r\n\r\nexport function useAxios<T>(uri: string) {\r\n  const [data, setData] = useState<T>();\r\n  const [error, setError] = useState();\r\n  const [statusCode, setStatusCode] = useState<number>(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!uri) return;\r\n    setLoading(true);\r\n    axios.get(uri)\r\n      .then((response) => setData(response.data))\r\n      .catch(function (error) { if(error.response) setStatusCode(error.response.status); setError(error); })\r\n      .then(() => setLoading(false))\r\n  }, [uri]);\r\n\r\n  return {\r\n    loading,\r\n    data,\r\n    error,\r\n    statusCode\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}