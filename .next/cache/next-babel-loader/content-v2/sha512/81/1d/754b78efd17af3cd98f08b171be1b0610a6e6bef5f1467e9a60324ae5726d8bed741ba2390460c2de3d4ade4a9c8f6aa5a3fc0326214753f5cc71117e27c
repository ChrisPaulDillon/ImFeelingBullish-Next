{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ChrisLifts\\\\source\\\\repos\\\\imfeelingbullish-next\\\\components\\\\coinGecko\\\\MarketTable.tsx\";\nimport { Table, Thead, Tfoot, Tr, Th, TableCaption } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MarketTableRows from './MarketTableRows';\n\nconst MarketTable = ({\n  marketData\n}) => {\n  const columns = useMemo(() => [{\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'Price',\n    accessor: 'price'\n  }, {\n    Header: 'Market Cap Rank',\n    accessor: 'marketCapRank'\n  }, {\n    Header: 'Market Cap',\n    accessor: 'marketCap'\n  }], []); // Use the state and functions returned from useTable to build your UI\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    getTableBodyProps\n  } = useTable({\n    columns,\n    data: marketData\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    variant: \"striped\",\n    children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n      children: \"Imperial to metric conversion factors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Thead, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        position: \"sticky\",\n        top: 0,\n        zIndex: 9,\n        bg: \"white\",\n        shadow: \"0 1px 0 rgba(0,0,0,0.1)\",\n        children: columns.map(headerGroup => /*#__PURE__*/_jsxDEV(Th, {\n          maxW: \"20%\",\n          textAlign: \"center\",\n          py: 2,\n          px: 0,\n          children: headerGroup.Header\n        }, headerGroup.Header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketTableRows, {\n      data: marketData,\n      rows: rows,\n      prepareRow: prepareRow,\n      getTableBodyProps: getTableBodyProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tfoot, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"To convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"into\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          isNumeric: true,\n          children: \"multiply by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MarketTable;","map":{"version":3,"sources":["C:/Users/ChrisLifts/source/repos/imfeelingbullish-next/components/coinGecko/MarketTable.tsx"],"names":["Table","Thead","Tfoot","Tr","Th","TableCaption","useMemo","useTable","MarketTableRows","MarketTable","marketData","columns","Header","accessor","getTableProps","headerGroups","rows","prepareRow","getTableBodyProps","data","map","headerGroup"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAA8BC,KAA9B,EAAqCC,EAArC,EAAyCC,EAAzC,EAAiDC,YAAjD,QAAqE,kBAArE;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAaA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACxD,QAAMC,OAAO,GAAGL,OAAO,CACrB,MAAM,CACJ;AACEM,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,iBADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATI,EAaJ;AACED,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAbI,CADe,EAmBrB,EAnBqB,CAAvB,CADwD,CAuBxD;;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA,UAArC;AAAiDC,IAAAA;AAAjD,MAAuEX,QAAQ,CAAC;AACpFI,IAAAA,OADoF;AAEpFQ,IAAAA,IAAI,EAAET;AAF8E,GAAD,CAArF;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA,6BACE,QAAC,EAAD;AAAI,QAAA,QAAQ,EAAC,QAAb;AAAsB,QAAA,GAAG,EAAE,CAA3B;AAA8B,QAAA,MAAM,EAAE,CAAtC;AAAyC,QAAA,EAAE,EAAC,OAA5C;AAAoD,QAAA,MAAM,EAAC,yBAA3D;AAAA,kBACGC,OAAO,CAACS,GAAR,CAAaC,WAAD,iBACX,QAAC,EAAD;AAA6B,UAAA,IAAI,EAAC,KAAlC;AAAwC,UAAA,SAAS,EAAC,QAAlD;AAA2D,UAAA,EAAE,EAAE,CAA/D;AAAkE,UAAA,EAAE,EAAE,CAAtE;AAAA,oBACGA,WAAW,CAACT;AADf,WAASS,WAAW,CAACT,MAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEF,UAAvB;AAAmC,MAAA,IAAI,EAAEM,IAAzC;AAA+C,MAAA,UAAU,EAAEC,UAA3D;AAAuE,MAAA,iBAAiB,EAAEC;AAA1F;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,KAAD;AAAA,6BACE,QAAC,EAAD;AAAA,gCACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,EAAD;AAAI,UAAA,SAAS,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAnDD;;AAqDA,eAAeT,WAAf","sourcesContent":["import { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from '@chakra-ui/react';\r\nimport { useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport MarketTableRows from './MarketTableRows';\r\n\r\nexport interface IMarketTableRow {\r\n  name: string;\r\n  price: string;\r\n  marketCapRank: number;\r\n  marketCap: string;\r\n}\r\n\r\ninterface IProps {\r\n  marketData: IMarketTableRow[];\r\n}\r\n\r\nconst MarketTable: React.FC<IProps> = ({ marketData }) => {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'price',\r\n      },\r\n      {\r\n        Header: 'Market Cap Rank',\r\n        accessor: 'marketCapRank',\r\n      },\r\n      {\r\n        Header: 'Market Cap',\r\n        accessor: 'marketCap',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, headerGroups, rows, prepareRow, getTableBodyProps } = useTable({\r\n    columns,\r\n    data: marketData,\r\n  });\r\n\r\n  return (\r\n    <Table variant=\"striped\">\r\n      <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n      <Thead>\r\n        <Tr position=\"sticky\" top={0} zIndex={9} bg=\"white\" shadow=\"0 1px 0 rgba(0,0,0,0.1)\">\r\n          {columns.map((headerGroup) => (\r\n            <Th key={headerGroup.Header} maxW=\"20%\" textAlign=\"center\" py={2} px={0}>\r\n              {headerGroup.Header}\r\n            </Th>\r\n          ))}\r\n        </Tr>\r\n      </Thead>\r\n      <MarketTableRows data={marketData} rows={rows} prepareRow={prepareRow} getTableBodyProps={getTableBodyProps} />\r\n      <Tfoot>\r\n        <Tr>\r\n          <Th>To convert</Th>\r\n          <Th>into</Th>\r\n          <Th isNumeric>multiply by</Th>\r\n        </Tr>\r\n      </Tfoot>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default MarketTable;\r\n"]},"metadata":{},"sourceType":"module"}